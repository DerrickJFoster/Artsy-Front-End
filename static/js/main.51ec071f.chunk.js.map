{"version":3,"sources":["components/SearchArt.js","components/UpdateIdeas.js","components/Favorites.js","components/Account.js","components/LogIn.js","App.js","serviceWorker.js","index.js"],"names":["baseURL","saveURL","SearchArt","state","keyword","century","art","favs","hasSearched","handleChange","event","_this","setState","Object","defineProperty","target","id","value","getArt","preventDefault","query","concat","console","log","fetch","then","data","json","error","jsonData","artObjects","saveArt","method","body","JSON","stringify","title","longTitle","imageurl","webImage","url","usernotes","userid","props","headers","Content-Type","copyFavs","toConsumableArray","push","apiResponse","_this2","this","react_default","a","createElement","className","onSubmit","type","placeholder","onChange","defaultValue","length","map","key","src","alt","indexOf","onClick","href","Component","UpdateIdeas","fav","changesSaved","saveIdeas","_id","deleteFavorite","Favorites","favorites","showUpdateId","getFavorites","showNotes","copyFavorites","findIndex","APIupdateResponse","response","index","splice","APIresponse","components_UpdateIdeas","name","Account","username","password","createAccount","updateUserId","redirect","history","LogIn","logIn","App","user","logOut","react_router_dom","to","react_router","path","exact","render","components_SearchArt","assign","components_Favorites","components_Account","action","components_LogIn","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51ec071f.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nconst baseURL = \"https://www.rijksmuseum.nl/api/en/collection?key=5p5zT3Jl&format=json&s=relevance&imgonly=true&ps=12\"\nconst saveURL = \"https://kickstart-me.herokuapp.com/art\"\n\nclass SearchArt extends Component {\n  state = {\n    keyword: \"\",\n    century: \"\",\n    art: [],\n    favs: [],\n    hasSearched: false\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n  getArt = (event) => {\n    event.preventDefault()\n    let query = \"\"\n    if (this.state.century === \"\") {\n      query=`&q=${this.state.keyword}`\n    } else {\n      query=`&q=${this.state.keyword}&f.dating.period=${this.state.century}`\n    }\n    console.log(baseURL+query)\n    fetch(baseURL+query)\n    .then(data => data.json(), error => console.log(error))\n    .then(jsonData => this.setState({\n      art: jsonData.artObjects,\n      keyword: \"\",\n      century: \"\",\n      hasSearched: true\n    }), error => console.log(error))\n  }\n  saveArt = (art) => {\n    fetch(saveURL, {\n      method: \"POST\",\n      body: JSON.stringify({\n        title: art.longTitle,\n        imageurl: art.webImage.url,\n        usernotes: \"\",\n        userid: this.props.id\n      }),\n      headers: {\n        \"Content-Type\":\"application/json\"\n      }\n    })\n    .then(data => data.json(), error => console.log(error))\n    .then((jsonData) => {\n      const copyFavs = [...this.state.favs]\n      copyFavs.push(art.id)\n      console.log(copyFavs)\n      this.setState({\n        apiResponse: jsonData,\n        favs: copyFavs\n      })\n    }, (error) => {\n      console.log(error)\n    })\n  }\n  render() {\n    return (\n      <div className=\"search-art\">\n        <h2>Search by Keyword and Get Inspired</h2>\n        <form onSubmit={this.getArt}>\n          <input\n            id=\"keyword\"\n            type=\"text\"\n            placeholder=\"keyword\"\n            value={this.state.keyword}\n            onChange={this.handleChange}\n          />\n          <select id=\"century\" onChange={this.handleChange}>\n            <option value=\"\" defaultValue=\"\">Choose Century (optional)</option>\n            <option value=\"1\">1st Century and Prior</option>\n            <option value=\"2\">2nd Century</option>\n            <option value=\"3\">3rd Century</option>\n            <option value=\"4\">4th Century</option>\n            <option value=\"5\">5th Century</option>\n            <option value=\"6\">6th Century</option>\n            <option value=\"7\">7th Century</option>\n            <option value=\"8\">8th Century</option>\n            <option value=\"9\">9th Century</option>\n            <option value=\"10\">10th Century</option>\n            <option value=\"11\">11th Century</option>\n            <option value=\"12\">12th Century</option>\n            <option value=\"13\">13th Century</option>\n            <option value=\"14\">14th Century</option>\n            <option value=\"15\">15th Century</option>\n            <option value=\"16\">16th Century</option>\n            <option value=\"17\">17th Century</option>\n            <option value=\"18\">18th Century</option>\n            <option value=\"19\">19th Century</option>\n            <option value=\"20\">20th Century</option>\n            <option value=\"21\">21st Century</option>\n          </select>\n          <input\n            id=\"submit\"\n            className=\"button-primary\"\n            type=\"submit\"\n            value=\"Get Inspiration\"\n          />\n        </form>\n        <div className=\"show-art\">\n          {\n            this.state.art.length <= 0 && this.state.hasSearched === true ?\n            <h3>Oh no! No results found for your search. Try again!</h3>\n            :\n              this.state.art.map((art) => {\n                return (\n                  <div className=\"art-piece\" key={art.id}>\n                    <h5>{art.longTitle}</h5>\n                    <img src={art.webImage.url} alt={art.title}/>\n                    <br/>\n                    {\n                      this.props.id !== \"\" && this.state.favs.indexOf(art.id) >= 0 ?\n                      <h4>Saved to Favorites!</h4>\n                      :\n                      this.props.id !== \"\" ?\n                      <button\n                        id=\"save-to-favorities\"\n                        onClick={() => {\n                          this.saveArt(art)\n                        }}\n                        >Save To Favorites</button>\n                        :\n                        <div className=\"log-in-or-join\">\n                          <h6>Log In or Join to Save your Favorites</h6>\n                          <a href=\"/login\" className=\"button\">Log In</a>\n                          <a href=\"/account\" className=\"button\">Join</a>\n                        </div>\n                    }\n                  </div>\n                )\n              })\n            }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SearchArt\n","import React, { Component } from \"react\"\nconst baseURL = \"https://kickstart-me.herokuapp.com/art\"\n\nclass UpdateIdeas extends Component {\n  state = {\n    usernotes: this.props.fav.usernotes,\n    changesSaved: false\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n  saveIdeas = (event) => {\n    event.preventDefault()\n    fetch(baseURL+\"/\"+this.props.fav._id, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        usernotes: this.state.usernotes\n      }),\n      headers: {\n        \"Content-Type\":\"application/json\"\n      }\n    })\n    .then(data => data.json(), error => console.log(error))\n    .then(jsonData => this.setState({\n      apiResponse: jsonData,\n      changesSaved: true\n    }), error => console.log(error))\n  }\n  render() {\n    return (\n      <div className=\"ideas\">\n        <h5>Your Ideas:</h5>\n        <form onSubmit={this.saveIdeas}>\n          <input\n            id=\"usernotes\"\n            type=\"text\"\n            value={this.state.usernotes}\n            onChange={this.handleChange}\n          />\n          <input type=\"submit\"\n            value=\"Update Ideas\"\n          />\n        </form>\n        {\n          this.state.changesSaved ?\n          <p>Changes Saved</p>\n          : null\n        }\n        <button\n          onClick={() => {\n            this.props.deleteFavorite(this.props.fav)\n          }}\n          >Delete</button>\n      </div>\n    )\n  }\n}\n\nexport default UpdateIdeas\n","import React, { Component } from \"react\"\nimport UpdateIdeas from \"./UpdateIdeas.js\"\nconst baseURL = \"https://kickstart-me.herokuapp.com/art\"\n\nclass Favorites extends Component {\n  state = {\n    favorites: [],\n    showUpdateId: \"\",\n    usernotes: \"\"\n  }\n  getFavorites = () => {\n    console.log(baseURL+\"/\"+this.props.id)\n    fetch(baseURL+\"/\"+this.props.id\n    )\n    .then((data) => {\n      return data.json()\n    }, (error) => {\n      console.log(error)\n    })\n    .then((jsonData) => {\n      this.setState({\n        favorites: jsonData\n      })\n    })\n  }\n  showNotes = (fav) => {\n    this.setState({\n      showUpdateId: fav._id\n    })\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n  saveIdeas = (event) => {\n    event.preventDefault()\n    fetch(baseURL+\"/\"+this.state.showUpdateId, {\n      method: \"PUT\",\n      body: JSON.stringify({usernotes: this.state.usernotes}),\n      headers: {\n        \"Content-Type\":\"application/json\"\n      }\n    })\n    .then((data) => {\n      return data.json()\n    }, (error) => {\n      console.log(error)\n    })\n    .then((jsonData) => {\n      const copyFavorites = [...this.state.favorites]\n      const index = this.state.favorites.findIndex(fav => fav._id === jsonData._id)\n      copyFavorites[index].usernotes = jsonData.usernotes\n      this.setState({\n        showUpdateId: \"\",\n        usernotes: \"\",\n        APIupdateResponse: jsonData,\n        favorites: copyFavorites\n      })\n    })\n  }\n  deleteFavorite = (fav) => {\n    fetch(baseURL+\"/\"+fav._id, {\n      method: \"DELETE\"\n    }).then((response) => {\n      return response.json()\n    }).then((json) => {\n      const copyFavorites = [...this.state.favorites]\n      const index = this.state.favorites.findIndex(fav => fav._id === json._id)\n      copyFavorites.splice(index, 1)\n      this.setState({\n        favorites: copyFavorites,\n        APIresponse: json\n      })\n    })\n  }\n  //Calling getFavorites once the component is ready\n  componentDidMount() {\n    this.getFavorites()\n  }\n  render() {\n    return (\n      <div className=\"favorites container\">\n        <h3>Your Saved Favorites</h3>\n        {\n          this.state.favorites.map((fav) => {\n            return (\n              <div className=\"fav\" key={fav._id}>\n                <h5>{fav.title}</h5>\n                {/* <p>{fav.artist}</p> */}\n                <img src={fav.imageurl} alt={fav.title}/>\n                {\n                  fav.usernotes ?\n                  <UpdateIdeas\n                    fav={fav}\n                    deleteFavorite={this.deleteFavorite}\n                  />\n                  :\n                    this.state.showUpdateId === fav._id ?\n                    <form onSubmit={this.saveIdeas}>\n                        <input\n                          className=\"eight columns\"\n                          type=\"text\"\n                          id=\"usernotes\"\n                          name=\"usernotes\"\n                          value={this.state.usernotes}\n                          onChange={this.handleChange}\n                        />\n                        <input type=\"submit\"\n                          id=\"save-ideas\"\n                          className=\"button-primary\"\n                          value=\"Save Ideas\"\n                        />\n                    </form>\n                    :\n                    <div className=\"actions\">\n                      <button className=\"button-primary\"\n                        onClick={() => {\n                          this.showNotes(fav)\n                        }}\n                        >Add Your Ideas</button>\n                        <button\n                          onClick={() => {\n                            this.deleteFavorite(fav)\n                          }}\n                          >Delete</button>\n                    </div>\n                }\n              </div>\n            )\n          })\n        }\n      </div>\n    )\n  }\n}\n\nexport default Favorites\n","import React, { Component } from \"react\"\nconst baseURL = \"https://kickstart-me.herokuapp.com/users\"\n\nclass Account extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    error: \"\"\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n  createAccount = (event) => {\n    event.preventDefault()\n    fetch(baseURL, {\n      method: \"POST\",\n      body: JSON.stringify({username: this.state.username, password: this.state.password}),\n      headers: {\n        \"Content-Type\":\"application/json\"\n      }\n    })\n    .then((data) => {\n      return data.json()\n    }, (error) => {\n      console.log(error)\n    })\n    .then((jsonData) => {\n      console.log(jsonData)\n      this.setState({\n        apiResponse: jsonData,\n        username: \"\",\n        password: \"\"\n      })\n      this.props.updateUserId(jsonData)\n      this.redirect()\n    })\n  }\n  redirect = () => {\n    this.props.history.push(\"/search\")\n  }\n  render() {\n    return (\n          <div className=\"account-create-form\">\n            <h2>Join kickstART</h2>\n            <form className=\"account-create\"\n              onSubmit={this.createAccount}\n              >\n              <input\n                id=\"username\"\n                type=\"text\"\n                placeholder=\"username\"\n                value={this.state.username}\n                onChange={this.handleChange}\n              />\n              <input\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n              <input\n                id=\"submit-account\"\n                className=\"button-primary\"\n                type=\"submit\"\n                value=\"Create Account\"\n              />\n            </form>\n          </div>\n    )\n  }\n}\n\nexport default Account\n","import React, { Component } from \"react\"\nconst baseURL = \"https://kickstart-me.herokuapp.com/users/login\"\n\nclass LogIn extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    error: \"\"\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n  logIn = (event) => {\n    event.preventDefault()\n    fetch(baseURL, {\n      method: \"POST\",\n      body: JSON.stringify({username: this.state.username, password: this.state.password}),\n      headers: {\n        \"Content-Type\":\"application/json\"\n      }\n    })\n    .then((data) => {\n      return data.json()\n    }, (error) => {\n      console.log(error)\n    })\n    .then((jsonData) => {\n      this.setState({\n        apiResponse: jsonData,\n        username: \"\",\n        password: \"\"\n      })\n      if (jsonData.error) {\n        this.setState({\n          error: jsonData.error\n        })\n      } else {\n        this.setState({\n          error: \"\"\n        })\n        this.props.updateUserId(jsonData)\n        this.redirect()\n      }\n    })\n  }\n  redirect = () => {\n    this.props.history.push(\"/search\")\n  }\n  render() {\n    return (\n          <div className=\"account-login-form\">\n            <h2>Log In</h2>\n            <form className=\"account-login\"\n              onSubmit={this.logIn}\n              >\n              <input\n                id=\"username\"\n                type=\"text\"\n                placeholder=\"username\"\n                value={this.state.username}\n                onChange={this.handleChange}\n              />\n              <input\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n              <input\n                id=\"submit-login\"\n                className=\"button-primary\"\n                type=\"submit\"\n                value=\"Log In\"\n              />\n            </form>\n            <p className=\"error\">{this.state.error}</p>\n          </div>\n    )\n  }\n}\n\nexport default LogIn\n","import React, { Component } from \"react\";\nimport SearchArt from \"./components/SearchArt.js\"\nimport Favorites from \"./components/Favorites.js\"\nimport Account from \"./components/Account.js\"\nimport LogIn from \"./components/LogIn.js\"\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\"\nimport \"./css/normalize.css\"\nimport \"./css/skeleton.css\"\nimport \"./css/App.css\";\n\n\nclass App extends Component {\n  state = {\n    username: \"\",\n    id: \"\"\n  }\n  updateUserId = (user) => {\n    this.setState({\n      username: user.username,\n      id: user.id\n    })\n  }\n  logOut = () => {\n    this.setState({\n      username: \"\",\n      id: \"\"\n    })\n  }\n  render() {\n    return (\n      <div className=\"app\">\n        <header className=\"app-header\">\n          <h1>kickstART</h1>\n          {\n            this.state.id !== \"\" ?\n            <h2 className='tracking-in-expand'>Find Inspiration And Spark Creativity | {this.state.username}</h2>\n            :\n            <h2 className='tracking-in-expand'>Find Inspiration And Spark Creativity</h2>\n          }\n        </header>\n        <Router>\n            {\n              this.state.id !== \"\" ?\n                <nav>\n                  <Link to=\"/search\">Search For Art</Link>\n                  <Link to=\"/favorites\">Your Favorites</Link>\n                  <a href=\"/\"\n                    onClick={this.logOut}\n                    >Log Out</a>\n                </nav>\n              :\n              <nav>\n                <Link to=\"/search\">Search For Art</Link>\n                <Link to=\"/login\">Log In</Link>\n                <Link to=\"/account\">Join</Link>\n              </nav>\n            }\n            <Route path=\"/\" exact\n            render={(props) => <SearchArt {...props} id={this.state.id}/>}\n            />\n            <Route path=\"/search\"\n            render={(props) => <SearchArt {...props} id={this.state.id}/>}\n            />\n            <Route path=\"/favorites\"\n            render={(props) => <Favorites {...props} id={this.state.id}/>}\n            />\n            <Route path=\"/account\"\n            render={(props) => <Account {...props} id={this.state.id} action=\"\" updateUserId={this.updateUserId}/>}\n            />\n            <Route path=\"/login\"\n            render={(props) => <LogIn {...props} id={this.state.id} updateUserId={this.updateUserId}/>}\n            />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}