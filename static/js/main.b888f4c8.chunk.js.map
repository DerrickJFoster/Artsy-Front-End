{"version":3,"sources":["components/SearchArt.js","components/UpdateIdeas.js","components/Favorites.js","components/Account.js","App.js","serviceWorker.js","index.js"],"names":["baseURL","saveURL","SearchArt","state","keyword","art","handleChange","event","_this","setState","Object","defineProperty","target","id","value","getArt","preventDefault","fetch","then","data","json","error","console","log","jsonData","artObjects","saveArt","method","body","JSON","stringify","title","longTitle","imageurl","webImage","url","usernotes","userid","headers","Content-Type","apiResponse","_this2","this","react_default","a","createElement","className","onSubmit","type","placeholder","onChange","map","key","principalOrFirstMaker","src","alt","onClick","Component","UpdateIdeas","props","fav","changesSaved","saveIdeas","_id","deleteFavorite","Favorites","favorites","showUpdateId","getFavorites","showNotes","copyFavorites","toConsumableArray","findIndex","APIupdateResponse","response","index","splice","APIresponse","components_UpdateIdeas","name","Account","username","password","action","setAction","createAccount","logIn","Fragment","App","react_router_dom","to","react_router","path","render","components_SearchArt","assign","components_Favorites","components_Account","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b888f4c8.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nconst baseURL = \"https://www.rijksmuseum.nl/api/en/collection?key=5p5zT3Jl&format=json&s=relevance&imgonly=true&ps=12&q=\"\nconst saveURL = \"https://kickstart-me.herokuapp.com/art\"\n\nclass SearchArt extends Component {\n  state = {\n    keyword: \"\",\n    art: []\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n  getArt = (event) => {\n    event.preventDefault()\n    fetch(baseURL+this.state.keyword)\n    .then(data => data.json(), error => console.log(error))\n    .then(jsonData => this.setState({\n      art: jsonData.artObjects,\n      keyword: \"\"\n    }), error => console.log(error))\n  }\n  saveArt = (art) => {\n    fetch(saveURL, {\n      method: \"POST\",\n      body: JSON.stringify({\n        title: art.longTitle,\n        imageurl: art.webImage.url,\n        usernotes: \"\",\n        userid: \"\"\n      }),\n      headers: {\n        \"Content-Type\":\"application/json\"\n      }\n    })\n    .then(data => data.json(), error => console.log(error))\n    .then(jsonData => this.setState({\n      apiResponse: jsonData\n    }), error => console.log(error))\n  }\n  render() {\n    return (\n      <div className=\"search-art\">\n        <h2>Search by Keyword and Get Inspired</h2>\n        <form onSubmit={this.getArt}>\n          <input\n            id=\"keyword\"\n            type=\"text\"\n            placeholder=\"keyword\"\n            value={this.state.keyword}\n            onChange={this.handleChange}\n          />\n          <input\n            id=\"submit\"\n            className=\"button-primary\"\n            type=\"submit\"\n            value=\"Get Inspiration\"\n          />\n        </form>\n        <div className=\"show-art\">\n          {\n            this.state.art.map((art) => {\n              return (\n                <div className=\"art-piece\" key={art.id}>\n                  <h5>{art.longTitle}</h5>\n                  <p>{art.principalOrFirstMaker}</p>\n                  <img src={art.webImage.url} alt={art.title}/>\n                  <button\n                    onClick={() => {\n                      this.saveArt(art)\n                    }}\n                    >Add To Favorites</button>\n                </div>\n              )\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SearchArt\n","import React, { Component } from \"react\"\nconst baseURL = \"https://kickstart-me.herokuapp.com/art\"\n\nclass UpdateIdeas extends Component {\n  state = {\n    usernotes: this.props.fav.usernotes,\n    changesSaved: false\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n  saveIdeas = (event) => {\n    event.preventDefault()\n    fetch(baseURL+\"/\"+this.props.fav._id, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        usernotes: this.state.usernotes\n      }),\n      headers: {\n        \"Content-Type\":\"application/json\"\n      }\n    })\n    .then(data => data.json(), error => console.log(error))\n    .then(jsonData => this.setState({\n      apiResponse: jsonData,\n      changesSaved: true\n    }), error => console.log(error))\n  }\n  render() {\n    return (\n      <div className=\"ideas\">\n        <h5>Your Ideas:</h5>\n        <form onSubmit={this.saveIdeas}>\n          <input\n            id=\"usernotes\"\n            className=\"eight column\"\n            type=\"text\"\n            value={this.state.usernotes}\n            onChange={this.handleChange}\n          />\n          <input type=\"submit\"\n            value=\"Save\"\n          />\n        </form>\n        {\n          this.state.changesSaved ?\n          <p>Changes Saved</p>\n          : null\n        }\n        <button\n          onClick={() => {\n            this.props.deleteFavorite(this.props.fav)\n          }}\n          >Delete</button>\n      </div>\n    )\n  }\n}\n\nexport default UpdateIdeas\n","import React, { Component } from \"react\"\nimport UpdateIdeas from \"./UpdateIdeas.js\"\nconst baseURL = \"https://kickstart-me.herokuapp.com/art\"\n\nclass Favorites extends Component {\n  state = {\n    favorites: [],\n    showUpdateId: \"\",\n    usernotes: \"\"\n  }\n  getFavorites = () => {\n    fetch(baseURL\n      //+\"/\"+this.props.id\n    )\n    .then((data) => {\n      return data.json()\n    }, (error) => {\n      console.log(error)\n    })\n    .then((jsonData) => {\n      this.setState({\n        favorites: jsonData\n      })\n    })\n  }\n  showNotes = (fav) => {\n    this.setState({\n      showUpdateId: fav._id\n    })\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n  saveIdeas = (event) => {\n    event.preventDefault()\n    fetch(baseURL+\"/\"+this.state.showUpdateId, {\n      method: \"PUT\",\n      body: JSON.stringify({usernotes: this.state.usernotes}),\n      headers: {\n        \"Content-Type\":\"application/json\"\n      }\n    })\n    .then((data) => {\n      return data.json()\n    }, (error) => {\n      console.log(error)\n    })\n    .then((jsonData) => {\n      const copyFavorites = [...this.state.favorites]\n      const index = this.state.favorites.findIndex(fav => fav._id === jsonData._id)\n      copyFavorites[index].usernotes = jsonData.usernotes\n      this.setState({\n        showUpdateId: \"\",\n        usernotes: \"\",\n        APIupdateResponse: jsonData,\n        favorites: copyFavorites\n      })\n    })\n  }\n  deleteFavorite = (fav) => {\n    fetch(baseURL+\"/\"+fav._id, {\n      method: \"DELETE\"\n    }).then((response) => {\n      return response.json()\n    }).then((json) => {\n      const copyFavorites = [...this.state.favorites]\n      const index = this.state.favorites.findIndex(fav => fav._id === json._id)\n      copyFavorites.splice(index, 1)\n      this.setState({\n        favorites: copyFavorites,\n        APIresponse: json\n      })\n    })\n  }\n  //Calling getFavorites once the component is ready\n  componentDidMount() {\n    this.getFavorites()\n  }\n  render() {\n    return (\n      <div className=\"favorites container\">\n        <h3>Your Saved Favorites</h3>\n        {\n          this.state.favorites.map((fav) => {\n            return (\n              <div className=\"fav\" key={fav._id}>\n                <h5>{fav.title}</h5>\n                {/* <p>{fav.artist}</p> */}\n                <img src={fav.imageurl} alt={fav.title}/>\n                {\n                  fav.usernotes ?\n                  <UpdateIdeas\n                    fav={fav}\n                    deleteFavorite={this.deleteFavorite}\n                  />\n                  :\n                    this.state.showUpdateId === fav._id ?\n                    <form onSubmit={this.saveIdeas}>\n                      <input\n                        className=\"eight columns\"\n                        type=\"text\"\n                        id=\"usernotes\"\n                        name=\"usernotes\"\n                        value={this.state.usernotes}\n                        onChange={this.handleChange}\n                      />\n                      <input type=\"submit\"\n                        className=\"button-primary\"\n                        value=\"Save Ideas\"\n                      />\n                    </form>\n                    :\n                    <div className=\"actions\">\n                      <button className=\"button-primary\"\n                        onClick={() => {\n                          this.showNotes(fav)\n                        }}\n                        >Add Your Ideas</button>\n                        <button\n                          onClick={() => {\n                            this.deleteFavorite(fav)\n                          }}\n                          >Delete</button>\n                    </div>\n                }\n              </div>\n            )\n          })\n        }\n      </div>\n    )\n  }\n}\n\nexport default Favorites\n","import React, { Component } from \"react\"\nconst baseURL = \"https://kickstart-me.herokuapp.com/\"\n\nclass Account extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    action: this.props.action\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n  setAction = (event) => {\n    this.setState({\n      action: event.target.id\n    })\n  }\n  createAccount = (event) => {\n    event.preventDefault()\n    console.log(\"ACCOUNT CREATE\")\n  }\n  logIn = (event) => {\n    event.preventDefault()\n    console.log(\"LOGIN\")\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <h2>Log In or Create Your Account to Save Favorites</h2>\n        {\n          this.state.action === \"\" ?\n          <div className=\"orientation-buttons\">\n            <button id=\"login\"\n              onClick={this.setAction}\n              >Log In</button>\n            <button className=\"button-primary\"\n              id=\"create\"\n              onClick={this.setAction}\n              >Create Account</button>\n            </div>\n              : null\n        }\n        {\n          this.state.action === \"create\" ?\n          <div className=\"account-create-form\">\n            <form className=\"account-create\"\n              onSubmit={this.createAccount}\n              >\n              <input\n                id=\"username\"\n                type=\"text\"\n                placeholder=\"username\"\n                value={this.state.username}\n                onChange={this.handleChange}\n              />\n              <input\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n              <input\n                id=\"submit-account\"\n                className=\"button-primary\"\n                type=\"submit\"\n                value=\"Create Account\"\n              />\n            </form>\n          </div>\n          : null\n        }\n        {\n          this.state.action === \"login\" ?\n          <div className=\"account-login-form\">\n            <form className=\"account-login\"\n              onSubmit={this.logIn}\n              >\n              <input\n                id=\"username\"\n                type=\"text\"\n                placeholder=\"username\"\n                value={this.state.username}\n                onChange={this.handleChange}\n              />\n              <input\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n              <input\n                id=\"submit-login\"\n                className=\"button-primary\"\n                type=\"submit\"\n                value=\"Log In\"\n              />\n            </form>\n          </div>\n          : null\n        }\n    </React.Fragment>\n    )\n  }\n}\n\nexport default Account\n","import React, { Component } from \"react\";\nimport SearchArt from \"./components/SearchArt.js\"\nimport Favorites from \"./components/Favorites.js\"\nimport Account from \"./components/Account.js\"\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\"\nimport \"./css/normalize.css\"\nimport \"./css/skeleton.css\"\nimport \"./css/App.css\"\n\n\nclass App extends Component {\n  state = {\n    id: \"testing234098234\"\n  }\n  render() {\n    return (\n      <div className=\"app\">\n        <header className=\"app-header\">\n          <h1>kickstART</h1>\n          <h2>Find Inspiration And Spark Creativity</h2>\n        </header>\n        <Router>\n          <nav>\n            <Link to=\"/search\">Search For Art</Link>{\" | \"}\n            <Link to=\"/favorites\">Your Favorites</Link>{\" |  \"}\n            <Link to=\"/account\">Log In or Create Your Account</Link>\n          </nav>\n            <Route path=\"/search\"\n            render={(props) => <SearchArt {...props} id={this.state.id}/>}\n            />\n            <Route path=\"/favorites\"\n            render={(props) => <Favorites {...props} id={this.state.id}/>}\n            />\n            <Route path=\"/account\"\n            render={(props) => <Account {...props} id={this.state.id} action=\"\"/>}\n            />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}